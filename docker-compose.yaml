version: '3.8'

services:

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: root
      RABBITMQ_DEFAULT_PASS: secretPassword
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  auth:
    container_name: auth_service
    restart: always
    build:
      context: ../auth
      dockerfile: Dockerfile
    ports:
      - "9000:9000"

  backend:
    container_name: backend_service
    restart: always
    build:
      context: ../backend
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "9001:9001"

  otp:
    container_name: otp_service
    restart: always
    build:
      context: ../otp-service
      dockerfile: Dockerfile
    ports:
      - "9002:9002"
  
  event_manager:
    container_name: event_manager_service
    restart: always
    build:
      context: ../backend-event-manager
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "9003:9003"
  
  notification:
    container_name: notification_service
    restart: always
    build:
      context: ../notificaiton-service
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: 5672
    ports:
      - "9004:9004"

  nginx:
    container_name: nginx_service
    image: nginx:latest
    restart: always
    volumes:
      - ../nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
