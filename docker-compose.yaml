version: '3.8'

services:

  redis_backend:
    image: redis:latest
    container_name: redis_backend
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=secretPassword
    volumes:
      - backend_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]
  
  redis_auth:
    image: redis:latest
    container_name: redis_auth
    restart: always
    ports:
      - "6380:6379"
    environment:
      - REDIS_PASSWORD=secretPassword
    volumes:
      - auth_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=root
      - RABBITMQ_DEFAULT_PASS=secretPassword
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 5s
      timeout: 3s
      retries: 3

  auth:
    container_name: auth_service
    restart: always
    build:
      context: ../auth
      dockerfile: Dockerfile
    depends_on:
      redis_backend:
        condition: service_healthy
    environment:
      - REDIS_HOST=redis_auth
      - REDIS_PORT=6380
      - REDIS_PASSWORD=secretPassword
    ports:
      - "9000:9000"

  backend:
    container_name: backend_service
    restart: always
    build:
      context: ../backend
      dockerfile: Dockerfile
    depends_on:
      redis_backend:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - REDIS_HOST=redis_backend
      - REDIS_PORT=6379
      - REDIS_PASSWORD=secretPassword
    ports:
      - "9001:9001"
    volumes:
      - ../fabric-network:/ehr/brahma_network/fabric-sample

  otp:
    container_name: otp_service
    restart: always
    build:
      context: ../otp-service
      dockerfile: Dockerfile
    ports:
      - "9002:9002"
  
  event_manager:
    container_name: event_manager_service
    restart: always
    build:
      context: ../backend-event-manager
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    ports:
      - "9003:9003"
  
  notification:
    container_name: notification_service
    restart: always
    build:
      context: ../notificaiton-service
      dockerfile: Dockerfile
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
    ports:
      - "9004:9004"

  nginx:
    container_name: nginx_service
    image: nginx:latest
    restart: always
    volumes:
      - ../nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"

volumes:
  auth_redis_data:
  backend_redis_data:
